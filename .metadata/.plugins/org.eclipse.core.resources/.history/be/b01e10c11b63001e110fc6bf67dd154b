package edu.kh.project.member.model.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import edu.kh.project.member.model.dao.MemberDAO;
import edu.kh.project.member.model.dto.Member;

@Service // 비즈니스 로직(데이터 가공, DAO 호출, 트랙잭션 제어) 처리하는 클래스 명시
// + Bean(spring에서 객체화)으로 등록하는 어노테이션
public class MemberServiceImpl implements MemberService {

	//DI 주입
	
	
	// @Autowired : 작성된 필드와 
	// Bean으로 등록된 객체 중 타입이 일치하는 Beans을 
	// 해당 필드에 자동 주입(injection)하는 어노테이션
	// == DI(Dependency Injection, 의존성 주입)
	// -> 객체를 직접 만들지 않고, Spring이 만든걸 주입함(Spring에 의존)
	
	@Autowired
	private MemberDAO dao;
	
	@Autowired // bean으로 등록된 객체 중 타입이 일치하는 객체를 DI
	private BCryptPasswordEncoder bcrypt;
	
	

	@Override
	public Member login(Member inputMember) {
		// TODO Auto-generated method stub
		
		System.out.println("암호화 확인 1:"+ bcrpt.encode(inputMember.getMemberPw()) );
		
		Member loginMember = dao.login(inputMember);
		
	
		
		
		return loginMember;
	}
	
}
